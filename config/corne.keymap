/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// global config settings
#define TAPPING_TERM 175
#define QUICK_TAP 200
#define COMBO_TIMEOUT 25

// layer aliases
#define L_DEFAULT 0
#define L_NUM_SYM 1
#define L_NAV_MED 2
#define L_NUMPAD 3
//#define L_GAMING 4
#define L_CONTROL 4

&mt {
    tapping-term-ms = <TAPPING_TERM>;
};

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};

/ {

        behaviors {
                td0: tap_dance_0 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_TO_LAYER_3";
                    #binding-cells = <0>;
                    tapping-term-ms = <TAPPING_TERM>;
                    bindings = <&kp SPACE>, <&to L_NUMPAD>;
                };
                td1: tap_dance_1 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_RESET_BOOTLOADER";
                    #binding-cells = <0>;
                    tapping-term-ms = <TAPPING_TERM>;
                    bindings = <&reset>, <&bootloader>;
                };
        };

        combos {
                compatible = "zmk,combos";
                combo_grave {
                    timeout-ms = <COMBO_TIMEOUT>;
                    key-positions = <1 2>;
                    bindings = <&kp GRAVE>;
                    layers = <0>;
                };
                combo_minus {
                    timeout-ms = <COMBO_TIMEOUT>;
                    key-positions = <9 10>;
                    bindings = <&kp MINUS>;
                    layers = <0>;
                };
                combo_semicolon {
                    timeout-ms = <COMBO_TIMEOUT>;
                    key-positions = <21 22>;
                    bindings = <&kp SEMI>;
                    layers = <0>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer { // 0 (L_DEFAULT)
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC  |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  | SHFT |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
//                    | ENT | GUI | BKS |   | SPC | DEL  | ALT |
                        bindings = <
   &kp TAB    &kp Q        &kp W  &kp E         &kp R         &kp T                     &kp Y                &kp U          &kp I         &kp O    &kp P           &kp ESC
   &kp LCTRL  &kp A        &kp S  &kp D         &mt LSHFT F   &kp G                     &kp H                &mt RSHFT J    &kp K         &kp L    &kp SQT         &kp RCTRL
   &kp LSHFT  &mt LCTRL Z  &kp X  &kp C         &kp V         &kp B                     &kp N                &kp M          &kp COMMA     &kp DOT  &mt RCTRL FSLH  &kp RSHFT
                                  &mt LALT RET  &mt LGUI ESC  &lt L_NUM_SYM BSPC        &lt L_NAV_MED SPACE  &mt RSHFT TAB  &mt RALT DEL
                        >;
                };

                number_symbol_layer {  // 1
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |  `  |     |     |     |  \  |   |  ;  |  -  |  =  |  [  |  ]  |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans  &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
   &trans  &kp N1     &kp N2  &kp N3    &kp N4    &kp N5          &kp N6     &kp N7     &kp N8           &kp N9    &kp N0    &trans
   &trans  &kp GRAVE  &trans  &trans    &trans    &kp BSLH        &kp SEMI   &kp MINUS  &kp EQUAL        &kp LBKT  &kp RBKT  &trans
                              &trans    &trans    &trans          &td0       &trans     &trans
                        >;
                };

                nav_media_layer {  // 2
// -----------------------------------------------------------------------------------------
// |      |  F1 | F2  | F3  | F4  | F5  |   | F6  |  F7 | F8  | F9  | F10 |      |
// |      | PUP | PRN | BT3 | BT4 | F11 |   |     | LFT | DWN | UP  | RGT |      |
// |      | PDN | SLK |     |     | F12 |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5               &kp F6   &kp F7    &kp F8    &kp F9  &kp F10    &trans
   &trans  &kp PG_UP    &kp SYSREQ   &trans       &kp K_VOL_UP &kp F11              &trans   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
   &trans  &kp PG_DN    &kp SLCK     &kp K_MUTE   &kp K_VOL_DN &kp F12              &trans   &trans    &trans    &trans  &trans     &trans
               	                     &trans       &trans       &mo L_CONTROL        &trans   &trans    &trans
                        >;
                };

                numpad_layer {  // 3
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans             &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &trans
   &trans  &trans  &trans  &trans  &trans  &trans             &kp KP_DIVIDE    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &trans
   &trans  &trans  &trans  &trans  &trans  &trans             &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &trans
                           &trans  &trans  &trans             &kp KP_ENTER     &kp BSPC   &trans
                        >;
                };

                control_layer {  // 4
// -----------------------------------------------------------------------------------------
// |  TD1 |     |     |     |     |     |   |     |     |     |     |     | TD1  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &td1        &trans        &trans        &trans        &trans        &trans             &trans  &trans  &trans  &trans  &trans  &td1
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &trans  &trans  &trans  &trans  &trans  &out OUT_USB
   &trans      &trans        &trans        &trans        &trans        &trans             &trans  &trans  &trans  &trans  &trans  &out OUT_BLE
                          	           &trans        &trans        &trans             &trans  &trans  &trans
                        >;
                };

        };
};
